//Diziler:
//RAM de aynı isimli alanda, aynı tip birden fazla deger tutmak için kullanılan veri yapılarıdır. Verilere indis'ler uzerinden ulaşılır...

//Dizilerde ilk elemanın indisi 0 dir...
//Son elemanın indisi= n-1

string ad1, ad2, ad3;

//ad1 = Console.ReadLine();
//ad2 = Console.ReadLine();   
//ad3= Console.ReadLine();

//Console.WriteLine(ad1);
//Console.WriteLine(ad2);
//Console.WriteLine(ad3);


//Dizi tanımlama
string[] isimler = new string[10];
int[] sayilar = new int[10];
int[] puanlar = { 45, 56, 67, 66 };
string[] sehirler = { "Istanbul", "Ankara" };

//Dizi elemanına ulasma(atama,alma)
sayilar[2] = 33;

Console.WriteLine(sayilar[2]);

//Run-Time da hata verir...
//IndexOutOfRange Exception....
//sayilar[10] = 11;

for (int i = 0; i < sayilar.Length; i++)
{
    Console.WriteLine(sayilar[i]);
}



//Dizilerin boyutu(RANK) derece-rutbe

//Düzenli diziler
int[] sayilar = new int[100]; //derecesi 1 olan dizi
int[,] matris = new int[10, 10]; //derecesi 2 olan dizi
int[,,] kup = new int[10, 10, 10]; //derecesi 3 olan dizi...

Console.WriteLine(sayilar.Rank);
Console.WriteLine(matris.Rank);
Console.WriteLine(kup.Rank);

//Düzensiz Dizi
//Jagged array
//Dizlerin dizisi
int[][] jagged = new int[3][];


int[] numbers = {34,567,1,45,345,77,987 };
//Array.Sort(numbers);
Array.Reverse(numbers);
Console.WriteLine("----------");
foreach (int i in numbers)
    Console.WriteLine(i);






//Kullanıcı tarafından boyutu belirlenen, bir tamsayi dizinin tum elemanlarını kullanıcıdan alan kodu yazınız?

Console.WriteLine("Elaman sayisi ne olsun?");
int elemanSayisi =int.Parse(Console.ReadLine());
int[] sayilar =new int[elemanSayisi];

for (int i = 0; i < sayilar.Length; i++)
{
    sayilar[i]=int.Parse(Console.ReadLine());
}

Console.WriteLine("Dizinin eleman sayisi=" + sayilar.Length);

for(int i = 0;i < elemanSayisi; i++)
    Console.WriteLine($"{i}. indisdeki deger ={sayilar[i]}");



//foreach dongusu...
//Kolekisyonlar üzerinde çalışır...
//sayac değişkenine gerek yok...
//dizinin boyutunu bilmek zorunda değiliz...
//iterasyon değişkeni sadece okunabilirdir...
foreach (int sayi in sayilar)
{
    Console.WriteLine($"{sayi}");
    //sayi = 11;
}

Foreach kullanım yerleri;
En farklı döngüdür.
Koleksiyonlarda çalışır.
IEnumearable interface ini uygulamış class lar üzerinde çalışır. Mülakat!!
Sadece birer birer ilerler.
iterasyon değişkeni sadece okunabilirdir. Ienumerator içinde sadece get var çünkü.




-----------------------

//Donguler

//for, while
//once sart, sonra islem
//do-while
//once islem sonra sart
//sarta kadar en az 1 kere çalışır...

//foreach: en farklı olan dongu
//Koleksiyonlar uzerinde calisir...
//Readonly dir...

//break:donguden çıkmak için kullanılır...
//gordugu anda donguyu bitirir...

do {
    //
    //
    break;
    Console.WriteLine("islem");

}while(true);

//break, continue kullanımı...

for (int i = 0; i < 10; i++)
{
    if (i == 5 || i==6) continue;
    Console.WriteLine(i);
}

//continue:sadece o adımı iptal eder...

//goto: Moduler programlamaya uygun bir kullanım değildir...
//Assembly
